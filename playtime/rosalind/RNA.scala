
object RNA {
  def main(args: Array[String]) {
    val t = "GTAATGTCTCAGCTGCATCTTCAGGGACCGAGGTGAGGCAAGTGGGCATTTTAGGCCACAGGCAGCAACGGCGCCGTCATGTGTGTTGAAGGATTCTTCGGCAGCAGGACGGCCGTGCCGAACCTCATACAAACTGGTCCAAGAGAGTCGCACCCCGTAAGGAGGGACTTTTCTATGGAGCCTTGGTCTGGTGATAGGGTTAAGGGATCAATTAAAAGTAGGGAACACATACCTGGTCTGAGATGGGCTTGACACATATACACTACATGCTCTGCTGGCTCTAAACCGACATATACGGCTCACTCATCAAGTGCAGAGAATGCTGCGAAGGCCATATACGGCATCATGTACGGCCGACTTCCGACCTGAATCCGCAGCCCAAGCCGTTTGGCCCACATCCGACGGGTGGGGGGGAACGGGAGATGGCACGGACCATTCCACCTTTACAAAAGTACGGAGTGTTACACTGGGCGGCTGCCTCCGAGTTCGATCGCGGCGCAGCCATATGTGCCGCCACGTACGCAAGGGCGGTAATCGCTCGACTCCGCGCCACTATTCGGTTGACGGACGTCACGAATGTCAAGCTGCCTCTCTGAGGCCACCCACTGACCTTGGTCGCGCAACCACCACTCTCTGAATCCGTCCCACCTGTGCGCGCGTATCCGGTTTCCTTCCTTAAGGTTCTATCGGAGAAAAGGTGACATGGGACTTCGAGGTATAGTTTCAAAGTGGTGCATTGACAAATTAGATGTCTACGTGACTCACTTGTAGGAGCGATAAGCGCTATTTAGAGTACATAACTTGACTGGTGCGTAATCATTCTGACTAGATGAACTTAAGGCGTATAGGATGTGTCAGGTCCCTGGGGACCCTCGCTGGATTGTTGCGCGTGAGGGAGCGGAGCACGCCTCTAAGAGACAGCCAATATTAAGTTCTTAAGGGGTACTGCGCTTACGGCGGAATCAAAGTCCGT"
    println(transcribe(t))
    
  def transcribe(t: String) = {
    t.map((x) => x match {
      case 'T' => 'U'
      case ch => ch
     })
    }
  }
}