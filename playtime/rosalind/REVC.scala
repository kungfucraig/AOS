
object REVC extends App {
  // val t = "TAGCTAAA"
  val t = "AGTGACATGGTACGGCAGTTCCCTGGGACTTGTCGCGGATTTCAGGTGTAGCAATATCTGTCAGGGTTTCGAGGGACCTCCCCATCTGGTCTGGCCAACCTTTCCCTGAGTAACTTTTCACTAATATGGGCCACTTGGTTCATCTACAGTCATATCGATATTCCGTATACGGAGCTAGAGAAAGCCTCACTGAGGAGGGCCTGTTAAATGTACTCGAGCCGTGAATCGTTATCAAGAATAGAACCATAAATACAAACATGGTTAATGGTGTTCCGAAGTCAAGTTGAACTGAATTGTCAGGGGCCGTGAGCAACATCCTGCACTCTCGTGGGAAGTACGTTAAAACCACGCATGGCTTAGAGCACTAACTATGACGGGGTTGTAACCCGGTCCTGCGCGGCGGCGGACAATACGCGACCCGGAGTCGTACCTCAATATAGTATCGCGTCTTTACCCCAATATGTTAATCATAGAGATCAGATTGTGGATTCGCCTTTGCGGGTAGGGGAAGTGAAGTGGGAATGTTCTTCAGGAACCCACGCTTGTGCCGTCTAAGAGGATCGCGTACGCGGACTGGCTGCAGCTTCGTTATCGTTTGCTTGAGGCGCGCTTCAAGCGCGCCACTTGAAATTACCTGCACGTGGCAACTGCCGTTGTAGCGTAAGGGTCCATTGGAACAATGCTTACACCAAGAGAGAAGGAATCGATTACACTCACTCAAGTGGCTTGAAGGTACCACAGATTATGAATCTGGTGTTGGTGATGCATTCTTTGCGGATACGTTTGCCGCCCGAGGAGCGGATCGTATCTGACAAACACTCCATGTCGATTTGGGCAAGTCAGTGCAGGCCGATAGTCACTGAAGCTGCCCAAGTATCTATCTGATGTGATTCCTACTATCACGCAGACCTTCAATAATTC"
  println(revc(t))
  
  def revc(t: String) = {
    t.map((x) => x match {
      case 'T' =>  'A'
      case 'A' =>  'T'
      case 'C' =>  'G'
      case 'G' =>  'C'
    }).reverse
  }
}
